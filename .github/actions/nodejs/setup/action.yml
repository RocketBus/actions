name: 'Node.js Setup'
description: ''

runs:
  using: "composite"
  steps:
    - name: Set up Node.js (npm)
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: npm

    - name: Install Yarn
      if: ${{ env.NODE_PACKAGE_MANAGEMENT == 'yarn' }}
      shell: bash
      run: npm install --global yarn

    - name: Set up Node.js (yarn)
      if: ${{ env.NODE_PACKAGE_MANAGEMENT == 'yarn' }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: yarn

    - name: Create .npmrc
      if: ${{ env.NODE_PACKAGE_MANAGEMENT == 'npm' }}
      shell: bash
      run: echo $NPMRC > ~/.npmrc

    - name: Create .yarnrc.yml
      if: ${{ env.NODE_PACKAGE_MANAGEMENT == 'yarn' }}
      shell: bash
      run: echo $YARNRC > ~/.yarnrc.yml

    - name: Set up CodeArtifact Authorization Token
      uses: RocketBus/actions/.github/actions/utils/codeartifact@v1
      with:
        aws_access_key_id: ${{ inputs.aws_access_key_id }}
        aws_secret_access_key: ${{ inputs.aws_secret_access_key }}

    - name: Install Dependencies
      if: ${{ env.NODE_PACKAGE_MANAGEMENT == 'npm' }}
      shell: bash
      run: npm ci

    - name: Install Dependencies
      if: ${{ env.NODE_PACKAGE_MANAGEMENT == 'yarn' }}
      shell: bash
      run: yarn install --frozen-lockfile

    - name: Set New Version
      if: ${{ env.NODE_PACKAGE_MANAGEMENT == 'npm' && github.ref_name == github.event.repository.default_branch }}
      shell: bash
      run: npm version $GITVERSION_SEMVER --no-git-tag-version --allow-same-version

    - name: Set New Version
      if: ${{ env.NODE_PACKAGE_MANAGEMENT == 'yarn' && github.ref_name == github.event.repository.default_branch }}
      shell: bash
      run: yarn version --new-version $GITVERSION_SEMVER --no-git-tag-version