name: 'Java CI'
description: ''

inputs:
  stage:
    description: ''
    required: true
  jdk_version:
    description: ''
    required: true
  maven_settings:
    description: ''
    required: false
  codeartifact_region:
    description: ''
    required: true
  actions_iam_role:
    description: ''
    required: true
  artifact_version:
    description: ''
    required: false
  codeartifact_domain:
    description: ''
    required: true
  codeartifact_domain_owner:
    description: ''
    required: true
  artifact_bucket_region:
    description: ''
    required: true
  artifact_bucket_name:
    description: ''
    required: true
  artifact_path:
    description: ''
    required: true

runs:
  using: "composite"
  steps:
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: ${{ inputs.jdk_version }}
        distribution: 'corretto'
        cache: 'maven'
        overwrite-settings: false

    - name: Create settings.xml
      if: ${{ inputs.maven_settings }}
      shell: bash
      run: echo "$MAVEN_SETTINGS" > ~/.m2/settings.xml
      env:
        MAVEN_SETTINGS: ${{ inputs.maven_settings }}

    - name: Set up CodeArtifact Authorization Token
      uses: RocketBus/actions/.github/actions/utils/codeartifact@v1
      with:
        codeartifact_region: ${{ inputs.codeartifact_region }}
        actions_iam_role: ${{ inputs.actions_iam_role }}
        codeartifact_domain: ${{ inputs.codeartifact_domain }}
        codeartifact_domain_owner: ${{ inputs.codeartifact_domain_owner }}

    - name: Project Metadata
      id: metadata
      shell: bash
      run: |
        GROUP_ID=$(./mvnw -B -e -ntp -q org.apache.maven.plugins:maven-help-plugin:3.4.0:evaluate -Dexpression=project.groupId -DforceStdout)
        ARTIFACT_ID=$(./mvnw -B -e -ntp -q org.apache.maven.plugins:maven-help-plugin:3.4.0:evaluate -Dexpression=project.artifactId -DforceStdout)

        if [[ $REF_NAME != $DEFAULT_BRANCH ]]; then
          ARTIFACT_VERSION=$ARTIFACT_VERSION-SNAPSHOT
        fi

        echo artifact_name=$ARTIFACT_ID-$ARTIFACT_VERSION >> $GITHUB_OUTPUT
        echo artifact_version=$ARTIFACT_VERSION >> $GITHUB_OUTPUT
        echo maven_group_id=$GROUP_ID >> $GITHUB_OUTPUT
        echo maven_artifact_id=$ARTIFACT_ID >> $GITHUB_OUTPUT
      env:
        REF_NAME: ${{ github.ref_name }}
        DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
        ARTIFACT_VERSION: ${{ inputs.artifact_version }}

    - name: Release Prepare
      shell: bash
      run: |
        ./mvnw -B -e -ntp -q org.codehaus.mojo:versions-maven-plugin:2.11.0:set -DnewVersion=$ARTIFACT_VERSION
        ./mvnw -B -e -ntp -q org.codehaus.mojo:versions-maven-plugin:2.11.0:set-property -Dproperty=revision -DnewVersion=$ARTIFACT_VERSION
        ./mvnw -B -e -ntp -q org.codehaus.mojo:versions-maven-plugin:2.11.0:commit
      env:
        ARTIFACT_VERSION: ${{ steps.metadata.outputs.artifact_version }}

    - name: Lint
      if: ${{ inputs.stage == 'lint' }}
      shell: bash
      run: ./mvnw $MAVEN_CLI_OPTS spotless:check

    - name: Build Artifact
      if: ${{ inputs.stage == 'build' }}
      shell: bash
      run: ./mvnw $MAVEN_CLI_OPTS package -Dspotless.check.skip=true -Dmaven.test.skip=true

    - name: Archive Application Artifact
      if: ${{ inputs.stage == 'build' }}
      uses: RocketBus/actions/.github/actions/utils/s3-artifact-upload@v1
      with:
        name: ${{ steps.metadata.outputs.artifact_name }}
        paths: ${{ inputs.artifact_path }}
        bucket_region: ${{ inputs.artifact_bucket_region }}
        bucket_name: ${{ inputs.artifact_bucket_name }}
        actions_iam_role: ${{ inputs.actions_iam_role }}

    - name: Run Tests
      if: ${{ inputs.stage == 'test' }}
      shell: bash
      run: ./mvnw $MAVEN_CLI_OPTS verify -Dspotless.check.skip=true -Dsonar.skip=true
      # run: ./mvnw $MAVEN_CLI_OPTS verify -Dspotless.check.skip=true -DskipITs=true -Dsonar.skip=true

    # - name: Run Integration Tests
    #   if: ${{ inputs.stage == 'test' }}
    #   shell: bash
    #   run: ./mvnw $MAVEN_CLI_OPTS verify -Dspotless.check.skip=true -DskipUTs=true -Dsonar.skip=true

    - name: Set up JDK for SonarQube
      if: ${{ inputs.stage == 'sonarqube' }}
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: 'corretto'
        cache: 'maven'
        overwrite-settings: false

    - name: SonarQube Scan
      if: ${{ inputs.stage == 'sonarqube' }}
      shell: bash
      run: |
        if [[ $EVENT_NAME == 'pull_request' ]]; then
          SONAR_ARGS="-Dsonar.pullrequest.key=$PR_NUMBER \
            -Dsonar.pullrequest.branch=$HEAD_REF \
            -Dsonar.pullrequest.base=$BASE_REF \
            -Dsonar.pullrequest.github.repository=$GITHUB_REPOSITORY"
        elif [[ $EVENT_NAME == 'push' && $REF_NAME != $DEFAULT_BRANCH ]]; then
          SONAR_ARGS="-Dsonar.branch.name=$REF_NAME"
        fi

        ./mvnw $MAVEN_CLI_OPTS sonar:sonar $SONAR_ARGS
      env:
        EVENT_NAME: ${{ github.event_name }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
        HEAD_REF: ${{ github.head_ref }}
        BASE_REF: ${{ github.base_ref }}
        REF_NAME: ${{ github.ref_name }}
        DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}

    - name: SonarQube Quality Gate Check
      if: ${{ inputs.stage == 'sonarqube' && github.event_name == 'pull_request' }}
      uses: sonarsource/sonarqube-quality-gate-action@master
      with:
        scanMetadataReportFile: target/sonar/report-task.txt

    - name: Download Application Artifact
      if: ${{ inputs.stage == 'release' && github.ref_name == github.event.repository.default_branch }}
      uses: RocketBus/actions/.github/actions/utils/s3-artifact-download@v1
      with:
        name: ${{ steps.metadata.outputs.artifact_name }}
        bucket_region: ${{ inputs.artifact_bucket_region }}
        bucket_name: ${{ inputs.artifact_bucket_name }}
        actions_iam_role: ${{ inputs.actions_iam_role }}

    - name: Release Artifact
      if: ${{ inputs.stage == 'release' && github.ref_name == github.event.repository.default_branch }}
      id: java_release
      shell: bash
      run: ./mvnw $MAVEN_CLI_OPTS deploy -Dspotless.check.skip=true -Dmaven.test.skip=true -Dsonar.skip=true

    - name: Clean up Release
      if: ${{ inputs.stage == 'cleanup' && (cancelled() || failure()) }}
      shell: bash
      run: |
        MODULES=$(./mvnw -B -e -ntp -q org.apache.maven.plugins:maven-help-plugin:3.4.0:evaluate -Dexpression=project.modules -DforceStdout | awk -F '<string>|</string>' '{print $2}')
        if [[ -z $MODULES ]]; then
          aws codeartifact list-package-versions \
            --namespace ${{ steps.metadata.outputs.maven_group_id }} \
            --package ${{ steps.metadata.outputs.maven_artifact_id }} \
            --package-version ${{ steps.metadata.outputs.artifact_version }} \
            --domain ${{ inputs.codeartifact_domain }} \
            --domain-owner ${{ inputs.codeartifact_domain_owner }} \
            --repository central \
            --format maven > /dev/null \
          && aws codeartifact delete-package-versions \
            --namespace ${{ steps.metadata.outputs.maven_group_id }} \
            --package ${{ steps.metadata.outputs.maven_artifact_id }} \
            --versions ${{ steps.metadata.outputs.artifact_version }} \
            --domain ${{ inputs.codeartifact_domain }} \
            --domain-owner ${{ inputs.codeartifact_domain_owner }} \
            --repository central \
            --format maven
        else
          for MODULE in $MODULES; do
            GROUP_ID=$(./mvnw -B -e -ntp -q org.apache.maven.plugins:maven-help-plugin:3.4.0:evaluate -Dproject.groupId -DforceStdout -pl $MODULE)
            ARTIFACT_ID=$(./mvnw -B -e -ntp -q org.apache.maven.plugins:maven-help-plugin:3.4.0:evaluate -Dproject.artifactId -DforceStdout -pl $MODULE)
            aws codeartifact list-package-versions \
              --namespace $GROUP_ID \
              --package $ARTIFACT_ID \
              --package-version ${{ steps.metadata.outputs.artifact_version }} \
              --domain ${{ inputs.codeartifact_domain }} \
              --domain-owner ${{ inputs.codeartifact_domain_owner }} \
              --repository central \
              --format maven > /dev/null \
            && aws codeartifact delete-package-versions \
              --namespace $GROUP_ID \
              --package $ARTIFACT_ID \
              --versions ${{ steps.metadata.outputs.artifact_version }} \
              --domain ${{ inputs.codeartifact_domain }} \
              --domain-owner ${{ inputs.codeartifact_domain_owner }} \
              --repository central \
              --format maven
          done
        fi
