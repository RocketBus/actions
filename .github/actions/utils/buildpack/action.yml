name: 'Set up Buildpack'
description: 'Set up Buildpack'

inputs:
  autodetect:
    description: ''
    required: false
    default: 'true'
  buildpacks:
    description: ''
    required: false

outputs:
  buildpacks:
    description: ''
    value: ${{ steps.setup_buildpack.outputs.buildpacks }}

runs:
  using: "composite"
  steps:
    - name: Set up Buildpack
      id: setup_buildpack
      shell: bash
      run: |
        if [[ $AUTODETECT_BUILDPACKS == 'true' ]]; then
          DETECTED_BUILDPACKS='[]'

          if [[ -f composer.json ]]; then
            DETECTED_BUILDPACKS=$(echo $DETECTED_BUILDPACKS | jq -r -c '. + ["php"]')
          fi

          if [[ -f package.json ]]; then
            DETECTED_BUILDPACKS=$(echo $DETECTED_BUILDPACKS | jq -r -c '. + ["nodejs"]')
          fi

          if [[ -f pom.xml || -f pom.groovy || -f pom.yml || -f pom.yaml ]]; then
            DETECTED_BUILDPACKS=$(echo $DETECTED_BUILDPACKS | jq -r -c '. + ["java"]')
          fi

          if [[ -f gradlew || -f build.gradle || -f settings.gradle || -f build.gradle.kts || -f settings.gradle.kts ]]; then
            DETECTED_BUILDPACKS=$(echo $DETECTED_BUILDPACKS | jq -r -c '. + ["gradle"]')
          fi

          if [[ -f $DOCKERFILE ]]; then
            DETECTED_BUILDPACKS=$(echo $DETECTED_BUILDPACKS | jq -r -c '. + ["docker"]')
          fi

          if [[ -f ${CHART_PATH}/Chart.yaml ]]; then
            DETECTED_BUILDPACKS=$(echo $DETECTED_BUILDPACKS | jq -r -c '. + ["chart"]')
          fi
        else
          DETECTED_BUILDPACKS='[]'
          BUILDPACKS_LIST=$(echo $BUILDPACKS | tr ' ' '\n')
          for item in $BUILDPACKS_LIST; do
            DETECTED_BUILDPACKS=$(echo $DETECTED_BUILDPACKS | jq -r -c '. + ["'$item'"]')
          done
        fi

        echo buildpacks=${DETECTED_BUILDPACKS} >> $GITHUB_OUTPUT
      env:
        AUTODETECT_BUILDPACKS: ${{ inputs.autodetect }}
        BUILDPACKS: ${{ inputs.buildpacks }}