name: 'Rollback'
description: 'Rollback on Kubernetes'

runs:
  using: "composite"
  steps:
    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: ${{ env.HELM_VERSION }}

    - name: Get Environment Specs
      id: environment_specs
      shell: bash
      run: |
        echo aws-region=$(echo $ENV_SPEC | jq -r --arg ENVIRONMENT $ENVIRONMENT '.[$ENVIRONMENT]."aws-region"') >> $GITHUB_OUTPUT
        echo aws-iam-role=$(echo $ENV_SPEC | jq -r --arg ENVIRONMENT $ENVIRONMENT '.[$ENVIRONMENT]."aws-iam-role"') >> $GITHUB_OUTPUT
        echo cluster-name=$(echo $ENV_SPEC | jq -r --arg ENVIRONMENT $ENVIRONMENT '.[$ENVIRONMENT]."cluster-name"') >> $GITHUB_OUTPUT

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ steps.environment_specs.outputs.aws-region }}
        role-skip-session-tagging: true
        role-to-assume: ${{ steps.environment_specs.outputs.aws-iam-role }}
        role-duration-seconds: 1200
        role-session-name: GitHubActionsDeploySession

    - name: Update Kubeconfig
      shell: bash
      run: aws eks update-kubeconfig --name $CLUSTER_NAME
      env:
        CLUSTER_NAME: ${{ steps.environment_specs.outputs.cluster-name }}

    - name: Helm Rollback
      shell: bash
      run: |
        ENVIRONMENT_PATH=${CHART_PATH}/${CHART_NAME}/environments/${ENVIRONMENT}

        if [[ -f ${ENVIRONMENT_PATH}/helmspec.yaml ]]; then
          RELEASE_NAME=$(yq '.releaseName | ""' ${ENVIRONMENT_PATH}/helmspec.yaml)
          RELEASE_NAMESPACE=$(yq '.releaseNamespace | ""' ${ENVIRONMENT_PATH}/helmspec.yaml)
        fi

        RELEASE_NAME=${RELEASE_NAME:-$CHART_NAME}
        RELEASE_NAMESPACE=${RELEASE_NAMESPACE:-$CHART_NAME}

        RELEASE_REVISION=$(helm history $RELEASE_NAME -o json -n $RELEASE_NAMESPACE | jq -r ---arg CHART $CHART_NAME-$CHART_VERSION '.[] | select(.chart == $CHART).revision')
        helm rollback $RELEASE_NAME $RELEASE_REVISION --wait --cleanup-on-fail -n $RELEASE_NAMESPACE