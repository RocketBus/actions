name: Auto DevOps

on:
  workflow_call:
    inputs:
      autodetect_buildpacks:
        type: string
        required: false
        default: true
      buildpacks:
        type: string
        required: false
      node_version:
        type: string
        required: false
        default: 18
      node_package_manager:
        type: string
        required: false
        default: yarn
      node_build_env:
        type: string
        required: false
      jdk_version:
        type: string
        required: false
        default: 17
      docker_image_name:
        type: string
        required: false
      dockerfile_path:
        type: string
        required: false
        default: Dockerfile
      docker_build_context:
        type: string
        required: false
        default: .
      docker_build_target:
        type: string
        required: false
      docker_build_args:
        type: string
        required: false
      chart_path:
        type: string
        required: false
        default: charts
      chart_name:
        type: string
        required: false
    secrets:
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true
      sonar_token:
        required: true

env:
  CI: true
  AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key_id }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_access_key }}
  CODEARTIFACT_DOMAIN: ${{ vars.CODEARTIFACT_DOMAIN }}
  CODEARTIFACT_DOMAIN_OWNER: ${{ vars.CODEARTIFACT_DOMAIN_OWNER }}
  CODEARTIFACT_REGION: ${{ vars.CODEARTIFACT_REGION }}
  SONAR_TOKEN: ${{ secrets.sonar_token }}
  SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
  AUTODETECT_BUILDPACKS: ${{ inputs.autodetect_buildpacks }}
  BUILDPACKS: ${{ inputs.buildpacks }}
  NODE_VERSION: ${{ inputs.node_version }}
  NODE_PACKAGE_MANAGER: ${{ inputs.node_package_manager }}
  NODE_OPTIONS: "--max_old_space_size=3072"
  NODE_ENV: production
  NODE_BUILD_ENV: ${{ inputs.node_build_env }}
  JDK_VERSION: ${{ inputs.jdk_version }}
  MAVEN_CLI_OPTS: "-B -Dstyle.color=always -e -fae -ntp -U -V"
  MAVEN_OPTS: "-Xmx1024m -Xms512m -Dhttps.protocols=TLSv1.2 -Dorg.slf4j.simpleLogger.showDateTime=true -Dorg.slf4j.simpleLogger.dateTimeFormat=HH:mm:ss,SSS -Djava.awt.headless=true"
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.parallel=true"
  DOCKER_IMAGE_NAME: ${{ inputs.docker_image_name || github.event.repository.name }}
  DOCKERFILE_PATH: ${{ inputs.dockerfile_path }}
  DOCKER_BUILD_CONTEXT: ${{ inputs.docker_build_context }}
  DOCKER_BUILD_TARGET: ${{ inputs.docker_build_target }}
  DOCKER_BUILD_ARGS: ${{ inputs.docker_build_args }}
  DOCKER_SCAN_FAIL_BUILD: true
  DOCKER_SCAN_SEVERITY_CUTOFF: medium
  ECR_REGION: ${{ vars.ECR_REGION }}
  HELM_VERSION: ${{ vars.HELM_VERSION }}
  CHART_PATH: ${{ inputs.chart_path }}
  CHART_NAME: ${{ inputs.chart_name || github.event.repository.name }}

jobs:
  build:
    name: Build
    runs-on: live
    outputs:
      gitversion_prereleasenumber: ${{ steps.gitversion.outputs.PreReleaseNumber }}
      gitversion_majorminorpatch: ${{ steps.gitversion.outputs.MajorMinorPatch }}
      gitversion_semver: ${{ steps.gitversion.outputs.SemVer }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up .NET cli
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'
        env:
          DOTNET_INSTALL_DIR: ~/.local/share/dotnet

      - name: Set up GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0

      - name: Build
        uses: RocketBus/actions/.github/actions/stages/build@v1
        with:
          yarnrc: ${{ vars.YARNRC }}
          npmrc: ${{ vars.NPMRC }}
          maven_settings: ${{ vars.MAVEN_SETTINGS }}

  test:
    name: Test
    runs-on: live
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Test
        uses: RocketBus/actions/.github/actions/stages/test@v1
        with:
          yarnrc: ${{ vars.YARNRC }}
          npmrc: ${{ vars.NPMRC }}
          maven_settings: ${{ vars.MAVEN_SETTINGS }}
        env:
          GITVERSION_PRERELEASENUMBER: ${{ needs.build.outputs.gitversion_prereleasenumber }}
          GITVERSION_MAJORMINORPATCH: ${{ needs.build.outputs.gitversion_majorminorpatch }}
          GITVERSION_SEMVER: ${{ needs.build.outputs.gitversion_semver }}

  release:
    name: Release
    runs-on: live
    needs:
      - build
      - test
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Release
        uses: RocketBus/actions/.github/actions/stages/release@v1
        with:
          yarnrc: ${{ vars.YARNRC }}
          npmrc: ${{ vars.NPMRC }}
          maven_settings: ${{ vars.MAVEN_SETTINGS }}
        env:
          GITVERSION_PRERELEASENUMBER: ${{ needs.build.outputs.gitversion_prereleasenumber }}
          GITVERSION_MAJORMINORPATCH: ${{ needs.build.outputs.gitversion_majorminorpatch }}
          GITVERSION_SEMVER: ${{ needs.build.outputs.gitversion_semver }}